@layout LoginLayout
@page "/"
@using BlazorrWASM.Services
@inject IAuthService AuthService
@inject NavigationManager navManager
<AuthorizeView>
    <NotAuthorized>
         <div class="container">
              <div class="wrapper">
                <div class="title"><span>Login</span></div>
                <form action="#">
                  <div class="row">
                      <i class="fas fa-user">
                          <img src="img/username.png" class="login-icons">
                      </i>
                    <input type="text" placeholder="Username" @bind="userName">
                  </div>
                    <div class="row">
                        <i class="fas fa-lock">
                            <img src="img/password.png" class="login-icons">
                        </i>
                        <input type="password" placeholder="Password" @bind="password">
                    </div>
                    @if (!string.IsNullOrEmpty(errorLabel)) 
                                { 
                                     <div class="field"> 
                                        <label style="color: red"> 
                                             @errorLabel 
                                        </label> 
                                    </div> 
                                } 
                    <div class="row button">
                    <input value=" Login" @onclick="LoginAsync" class="loginbtn" readonly>
                  </div>
                  <div class="signup-link">Not a member? <a @onclick="@(() => navManager.NavigateTo("/CreateUser"))">Sign-up Here</a> </div>
                </form>
              </div>
            </div>
    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Hello, @context.User.Identity.Name</h3>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private string userName;
    private string password;
    private string errorLabel;

    private async Task LoginAsync()
    {
        errorLabel = "";
        try
        {
            await AuthService.LoginAsync(userName, password);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }
}