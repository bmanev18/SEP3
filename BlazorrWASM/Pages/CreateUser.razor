@page "/CreateUser"
@using global::Shared.DTOs
@using HttpClients.ClientInterfaces
@inject IUserService userService;


<div class="card">
    <h3>Create User</h3>
    <div class="form-group field">
        <label>User name:</label>
        <input type="text" @bind="username" @bind:event="oninput"/>
    </div>
    
    <div class="form-group field">
        <label>First Name:</label>
        <input type="text" @bind="firstname" @bind:event="oninput"/>
    </div>
    
    <div class="form-group field">
        <label>Last Name:</label>
        <input type="text" @bind="lastname" @bind:event="oninput"/>

    </div>
    
        <div class="form-group field">
             <label>Role for the project:</label> 

            <input type="text" @bind="role" @bind:event="oninput" list='listid'/>
             <datalist id='listid'>
                 <option label='scrum master' value='scrum master'></option>
                 <option label='developer' value='developer'></option>
                 <option label='project manager' value='project manager'></option>
             </datalist>
            
        </div>
    <div class="form-group field">
        <label>Password:</label>
        <input type="text" @bind="password" @bind:event="oninput"/>

    </div>
    
        <div class="form-group field">
            <label>Confirm Password:</label>
            <input type="text" @bind="confirmPassword" @bind:event="oninput"/>
        </div>
<div class="button-row">
    <button @onclick="Create" class="acceptbtn">Create a profile</button>
    <label style="color: @color">@finalResultMsg</label>
</div>

</div>


@code {
    private string username = "";
    private string firstname = "";
    private string lastname = "";
    private string password = "";
    private string confirmPassword = "";
    private string role = "";
    private string finalResultMsg = "";
    private string color = "";
    
    private async Task Create()
    {

        finalResultMsg = "";

        try
        {
            if (username != "" && firstname != "" && password != "" && confirmPassword != "" && role != "")
            {
                if (password == confirmPassword)
                {
                    if (password.Length >= 8)
                    {
                        await userService.Create(new UserCreationDto(username, password, role, firstname, lastname));
                        username = "";
                        password = "";
                        confirmPassword = "";
                        role = "";
                        firstname = "";
                        lastname = "";
                        finalResultMsg = "User successfully created";
                        color = "green";
                    }
                    else finalResultMsg = "The password should have more than 8 characters !";
                }

                else finalResultMsg = "The passwords don't match!";
            }
            else finalResultMsg = "The fields can not be empty!";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            finalResultMsg = e.Message;
            color = "red";
        }
    }
}