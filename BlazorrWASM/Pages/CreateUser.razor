@page "/CreateUser"
@layout LoginLayout
@using HttpClients.ClientInterfaces
@using BlazorrWASM.Services
@inject NavigationManager navManager
@inject IUserService userService
@inject IAuthService authService
<div class="wrapper">
    <h2>Registration</h2>
    <form action="#">
        <div class="input-box">
            <input type="text" placeholder="Enter Your Username" @bind="username" @bind:event="oninput">
        </div>
        <div class="input-box">
            <input type="text" placeholder="Enter Your Firstname" @bind="firstname" @bind:event="oninput">
        </div>
        <div class="input-box">
            <input type="text" placeholder="Enter Your Last Name" @bind="lastname" @bind:event="oninput">
        </div>
        <div class="input-box">
            <input type="text" @bind="role" @bind:event="oninput" list='listid' placeholder="Role"/>
            <datalist id='listid'>
                <option label='scrum master' value='scrum master'></option>
                <option label='developer' value='developer'></option>
                <option label='project manager' value='project manager'></option>
            </datalist>
        </div>
        <div class="input-box">
            <input type="password" placeholder="Create Password" @bind="password" @bind:event="oninput">
        </div>
        <div class="input-box">
            <input type="password" placeholder="Confirm Password" @bind="confirmPassword" @bind:event="oninput">
        </div>
        <label style="color: @color">@finalResultMsg</label>
        <div class="input-box button">
                <input value="Register Now" @onclick="Create" readonly>
              </div>
        <div class="text">
            <h3>Already have an account? <a @onclick="@(() => navManager.NavigateTo("/"))">Login now</a></h3>
        </div>
    </form>
</div>
@code {
    private string username = "";
    private string firstname = "";
    private string lastname = "";
    private string password = "";
    private string confirmPassword = "";
    private string role = "";
    private string finalResultMsg = "";
    private string color = "";

    private async Task Create()
    {

        finalResultMsg = "";

        if (password.Equals(confirmPassword))
        {
            try
            {
                await authService.RegisterAsync(username, firstname, lastname, password, role);
                username = "";
                password = "";
                confirmPassword = "";
                role = "";
                firstname = "";
                lastname = "";
                color = "green";
                finalResultMsg = "User successfully created";
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
                finalResultMsg = e.Message;
                color = "red";
            }
        }
        else
        {
            finalResultMsg = "Passwords do not match!";
        }
    }
    

}