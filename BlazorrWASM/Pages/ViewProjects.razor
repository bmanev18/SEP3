@page "/ViewProjects"
@using HttpClients.ClientInterfaces
@inject IProjectService ProjectService
@inject IUserStoryService UserStoryService
@inject NavigationManager navMgr
@using global::Shared.Model
@using System.Security.Claims
@using global::Shared.DTOs
<h3>View My Projects</h3>


@if (!string.IsNullOrEmpty(msg))@* display any msg in case it has ny value in case of error*@
{
    <div>
        <span>@msg</span>
    </div>
}

@if (projects == null)
{
    <span>Loading..</span>
}
else if (!projects.Any())
{
    <span>No projects to be found</span>
}
else 
{
    <table class="table justify-content-center">
        
        <thead>
        <tr>
            <th class="text-center">Title</th>
        </tr>
        </thead>
        <tbody>
        @foreach (Project project in projects)
        {
            <tr>
                <td class="text-center" @onclick="() => Open(project.id)">@project.Title</td>
            </tr>
        }

        </tbody>
    </table>
}


@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null;
    private string msg = "";
    private IEnumerable<Project>? projects;
    private static ProjectDto project;
    private string body = "";
    private ClaimsPrincipal user;

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState AuthState = await this.AuthState;
        user = AuthState.User;
        msg = "";
        Console.WriteLine(msg);
        try
        {
            projects = await ProjectService.GetProjectsByUsername(user.Identity.Name);
        }
        catch(Exception e)
        {
            Console.WriteLine(e);
        }
    }

    
    private void Open(int id)
    {
        navMgr.NavigateTo($"/ViewUserStories/{id}");
    }
}

