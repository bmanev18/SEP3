@page "/CreateProject"
@using HttpClients.ClientInterfaces
@using global::Shared.DTOs
@inject IProjectService ProjectService
@using System.Security.Claims

<h3 class="text-center">Create a Project</h3>
<AuthorizeView Roles="project manager">
    <Authorized>
        <div class="container">
            <div class="wrapper">
                <form action="#">
                    <div class="row">
                        <input type="text" placeholder="Title" @bind="_title">
                    </div>
                    <div class="row button">
                        <input value="Create" @onclick="@Create" class="loginbtn text-center" readonly>
                    </div>
                    @if (!string.IsNullOrEmpty(_message))
                    {
                        <div class="field">
                            <label style="color: red">
                                @_message
                            </label>
                        </div>
                    }

                </form>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <label>
            You are not authorized to view this page.
        </label>
    </NotAuthorized>
</AuthorizeView>

@code {

    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;

    private string _title = "";
    private string _message = "";
    private ClaimsPrincipal _user = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthState;
        _user = authState.User;
    }

    private async Task Create()
    {
        _message = "";
        if (string.IsNullOrEmpty(_title))
        {
            _message = "Cannot create a title-less post!";
            return;
        }
        if (_user.Identity?.Name == null)
        {
            return;
        }
        try
        {
            await ProjectService.CreateAsync(new ProjectCreationDto
            {
                OwnerUsername = _user.Identity.Name,
                Name = _title
            });
            _message = "Project created successfully!";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            _message = e.Message;
        }
    }

}

}