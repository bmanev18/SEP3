
syntax = "proto3";

option java_package = "com.protobuf";
option csharp_namespace = "DataAccessClient";

service UserAccess {
    rpc CreateUser (UserCreationDto) returns (Response);
    rpc UserByUsername (Username) returns (UserCreationDto);
    rpc UpdateUser (UserCreationDto) returns (UpdatedUserResponse);
    rpc DeleteUser (Username) returns (Response);
    rpc LookForUsers(Username) returns (FilteredUsersResponse);
}


service ProjectAccess {
    //Project
    rpc CreateProject (ProjectCreationDto) returns (ResponseWithID);
    rpc GetAllProjects (Username) returns (ProjectsResponse);

    //Collaborators
    rpc GetAllCollaborators(Id) returns (FilteredUsersResponse);
    rpc AddCollaborator (AddToProjectDto) returns (Response);
    rpc RemoveCollaborator(AddToProjectDto) returns (Response);

    //UserStories
    rpc AddUserStory (UserStoryMessage) returns (ResponseWithID);
    rpc GetUserStories (Id) returns (UserStoriesResponse);
    rpc UpdateUserStoryPoints(PointsUpdate) returns(Response);
    rpc UpdateUserStoryStatus(StatusUpdate) returns (Response);
    rpc UpdateUserStoryPriority(PriorityUpdate) returns (Response);
    rpc DeleteUserStory (Id) returns (Response);

    //Sprints
    rpc CreateSprint(SprintCreationRequest) returns (Response);
    rpc GetSprintByID(Id) returns (SprintMessage);
    rpc GetSprintByProjectId(Id) returns (AllSprintsMessage);
    rpc RemoveSprint(RemoveSprintMessage) returns (Response);
    rpc RemoveTask(Id) returns (Response);


    //SprintBacklog
    rpc AddTask(TaskRequest) returns (Response);
    rpc GetTasks(Id) returns (AllTasksMessage);
    rpc EditTask(TaskRequest) returns (Response);

    rpc AddUserStoryToSprint(UserStoryToSprintRequest) returns (Response);
    rpc RemoveUserStoryFromSprint(UserStoryToSprintRequest) returns (Response);
    rpc GetAllUserStoriesFromSprint(Id) returns (UserStoriesResponse);
}


message UserCreationDto {
    string username = 1;
    string firstName = 2;
    string lastName = 3;
    string password = 4;
    string role = 5;
}
message Id {
    int32 id = 1;
}

message Response {
    int32 code = 1;
}

message ResponseWithID {
    int32 code = 1;
    int32 id = 2;
}

message UserSearchDto {
    string firstName = 1;
    string lastName = 2;
    string username = 3;
    string role = 4;
}

message FilteredUsersResponse {
    repeated UserSearchDto users = 1;
    int32 code = 2;
}

message UpdatedUserResponse {
    UserCreationDto user = 1;
    int32 code = 2;
}

message Username {
    string username = 1;
}

message AddToProjectDto {
    string username = 1;
    int32 projectId = 2;
}
message CollaboratorsResponse{
    repeated UserCreationDto collaborators = 1;
}

//ProjectService
message ProjectCreationDto {
    string ownerUsername = 1;
    string title = 2;
}

message UserStoryMessage {
    int32 project_id = 1;
    string taskBody = 2;
    string priority = 3;
    string status= 4;
    int32 storyPoint=5;
}
message ProjectMessage {
    int32 id = 1;
    string title = 2;
}
message ProjectsResponse {
    repeated ProjectMessage projects = 1;
    int32 code = 2;
}
message UserStory {
    int32 id = 1;
    int32 project_id = 2;
    string userStory = 3;
    string priority = 4;
    string status= 5;
    int32 storyPoint=6;
}
message UserStoriesResponse {
    repeated UserStory userStories = 1;
    int32 code = 2;
}
message PointsUpdate{
    int32 id = 1;
    int32 points = 2;
}
message StatusUpdate{
    int32 id =1 ;
    string status=2;
}
message PriorityUpdate{
    int32 id = 1;
    string priority=2;
}
message SprintCreationRequest{
    int32 project_id = 1;
    string name = 2;
    string starDate = 3;
    string endDate = 4;
}
message SprintMessage{
    int32 id = 1;
    int32 project_id=2;
    string name = 3;
    string starDate = 4;
    string endDate = 5;
    int32 code = 6;
}
message AllSprintsMessage{
    repeated SprintMessage sprints = 1;
    int32 code = 2;
}
message TaskRequest{
    int32 id = 1;
    string asignee = 2;
    string body = 3;
    int32 storyPoints = 4;
    string status = 5;
    int32 story_id = 6;
}
message ChangeTaskRequest{
    int32 task_id = 1;
    string body = 2;
    int32 storyPoint = 3;
    int32 userStory_id = 4;
    string status = 5;
}
message UserStoryToSprintRequest{
    int32 userStory_id = 1;
    int32 sprint_id = 2;
}
message AllTasksMessage{
    repeated TaskRequest tasks = 1;
    int32 code = 2;
}

message AssignTaskMessage{
    Username username = 1;
    int32 task_id = 2;
}

message RemoveSprintMessage{
    int32 projectId = 1;
    int32 sprintId = 2;
}